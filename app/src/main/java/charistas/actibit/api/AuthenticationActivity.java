package charistas.actibit.api;

import android.app.Activity;
import android.content.ComponentName;
import android.content.SharedPreferences;
import android.net.Uri;
import android.preference.PreferenceManager;
import android.support.customtabs.CustomTabsClient;
import android.support.customtabs.CustomTabsIntent;
import android.os.Bundle;
import android.support.customtabs.CustomTabsServiceConnection;
import android.support.customtabs.CustomTabsSession;
import android.support.v4.content.ContextCompat;
import android.widget.Toast;

import charistas.actibit.R;

import static charistas.actibit.api.QuickPreferences.AUTH_URL;

/**
 * This class is responsible for launching the browser and loading the URL where the user can
 * sign-in.
 */
public class AuthenticationActivity extends Activity {
    private CustomTabsClient client;
    private CustomTabsSession session;
    private CustomTabsServiceConnection serviceConnection;

    private static final String CUSTOM_TAB_PACKAGE_NAME = "com.android.chrome";

    /**
     * Launches the Chrome browser and loads the URL that prompts the user to sign-in.
     * @param savedInstanceState The state generated by a previous instance of this activity
     */
    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);

        // Configure the browser
        warmUpBrowser();
        CustomTabsClient.bindCustomTabsService(this, CUSTOM_TAB_PACKAGE_NAME, serviceConnection);
        CustomTabsIntent customTabsIntent = new CustomTabsIntent.Builder(session)
                .setToolbarColor(ContextCompat.getColor(this, R.color.primary))
                .setShowTitle(true)
                .build();

        // Checks whether the user has already signed-in or not
        SharedPreferences sharedPreferences = PreferenceManager.getDefaultSharedPreferences(this);
        boolean haveToken = sharedPreferences.getBoolean(QuickPreferences.HAVE_AUTHORIZATION, false);

        // If the user hasn't signed-in, load the website
        if(!haveToken) {
            customTabsIntent.launchUrl(this, Uri.parse(AUTH_URL));
        } else {
            Toast.makeText(this, "Already logged in", Toast.LENGTH_SHORT).show();
            onBackPressed();
        }
    }

    /**
     * Warms up the browser so it launches and loads the website faster.
     */
    private void warmUpBrowser() {
        serviceConnection = new CustomTabsServiceConnection() {

            @Override
            public void onCustomTabsServiceConnected(ComponentName componentName, CustomTabsClient customTabsClient) {
                client = customTabsClient;
                client.warmup(0L);
                session = client.newSession(null);
            }

            @Override
            public void onServiceDisconnected(ComponentName name) {
                client = null;
            }
        };
    }
}
